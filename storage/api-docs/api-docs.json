{
    "openapi": "3.0.0",
    "info": {
        "title": "SportReserve",
        "contact": {
            "email": "derex@outlook.com.br"
        },
        "license": {
            "name": "MIT"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://api-sport-reserve.juvhost.com"
        }
    ],
    "paths": {
        "/api/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User login",
                "description": "Authenticate user and return user data",
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "admin@admin.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful."
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "$ref": "#/components/schemas/User"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "example-token"
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                },
                                                "expires_in": {
                                                    "type": "string",
                                                    "example": "2024-06-20 14:00:00"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials."
                                        },
                                        "data": {
                                            "type": "object",
                                            "nullable": true
                                        },
                                        "errors": {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User registration",
                "description": "Register a new user and return user data",
                "operationId": "register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "cpf": {
                                        "type": "string",
                                        "example": "12345678901"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "(81) 91234-5678"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Registration successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Registration successful."
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "$ref": "#/components/schemas/User"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "example-token"
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                },
                                                "expires_in": {
                                                    "type": "integer",
                                                    "example": 3600
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error."
                                        },
                                        "data": {
                                            "type": "object",
                                            "nullable": true
                                        },
                                        "errors": {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User logout",
                "description": "Logout the authenticated user",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logout successful"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Get authenticated user",
                "description": "Returns the authenticated user's data",
                "operationId": "getUser",
                "responses": {
                    "200": {
                        "description": "User data retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/fields": {
            "get": {
                "tags": [
                    "Fields"
                ],
                "summary": "Get list of fields",
                "description": "Returns list of fields",
                "operationId": "getFieldsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Field"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Fields"
                ],
                "summary": "Store a new field",
                "description": "Stores a new field and returns the field data",
                "operationId": "storeField",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreFieldRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Field"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/fields/{id}": {
            "get": {
                "tags": [
                    "Fields"
                ],
                "summary": "Get field information",
                "description": "Returns field data",
                "operationId": "getFieldById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Field"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Field not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Fields"
                ],
                "summary": "Delete an existing field",
                "description": "Deletes an existing field and returns success message",
                "operationId": "deleteField",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Field"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Fields"
                ],
                "summary": "Update an existing field",
                "description": "Updates an existing field and returns the updated data",
                "operationId": "updateField",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateFieldRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Field"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reservations": {
            "get": {
                "tags": [
                    "Reservations"
                ],
                "summary": "Get list of reservations",
                "description": "Returns list of reservations",
                "operationId": "getReservationsList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Reservation"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Reservations"
                ],
                "summary": "Store a new reservation",
                "description": "Stores a new reservation and returns the reservation data",
                "operationId": "storeReservation",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreReservationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Reservation"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reservations/{id}": {
            "get": {
                "tags": [
                    "Reservations"
                ],
                "summary": "Get reservation information",
                "description": "Returns reservation data",
                "operationId": "getReservationById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Reservation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Reservation not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Reservations"
                ],
                "summary": "Delete an existing reservation",
                "description": "Deletes an existing reservation and returns success message",
                "operationId": "deleteReservation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Reservation"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Reservations"
                ],
                "summary": "Update an existing reservation",
                "description": "Updates an existing reservation and returns the updated data",
                "operationId": "updateReservation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateReservationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Reservation"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get list of users",
                "description": "Returns list of users",
                "operationId": "getUsersList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Store a new user",
                "description": "Stores a new user and returns the user data",
                "operationId": "storeUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user information",
                "description": "Returns user data",
                "operationId": "getUserById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete an existing user",
                "description": "Deletes an existing user and returns success message",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Users"
                ],
                "summary": "Update an existing user",
                "description": "Updates an existing user and returns the updated data",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "StoreFieldRequest": {
                "title": "Store Field Request",
                "required": [
                    "name",
                    "location",
                    "type",
                    "hourly_rate"
                ],
                "properties": {
                    "name": {
                        "description": "Name of the field",
                        "type": "string"
                    },
                    "location": {
                        "description": "Location of the field",
                        "type": "string"
                    },
                    "type": {
                        "description": "Type of the field",
                        "type": "string"
                    },
                    "hourly_rate": {
                        "description": "Hourly rate for renting the field",
                        "type": "number",
                        "format": "float"
                    }
                },
                "type": "object"
            },
            "StoreReservationRequest": {
                "title": "Store Reservation Request",
                "required": [
                    "user_id",
                    "start_time",
                    "end_time"
                ],
                "properties": {
                    "user_id": {
                        "description": "ID of the user",
                        "type": "integer"
                    },
                    "start_time": {
                        "description": "Start time of the reservation",
                        "type": "string",
                        "format": "date-time"
                    },
                    "end_time": {
                        "description": "End time of the reservation",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "StoreUserRequest": {
                "title": "Store User Request",
                "required": [
                    "name",
                    "email",
                    "cpf",
                    "phone",
                    "password"
                ],
                "properties": {
                    "name": {
                        "description": "Name of the user",
                        "type": "string"
                    },
                    "email": {
                        "description": "Email of the user",
                        "type": "string",
                        "format": "email"
                    },
                    "cpf": {
                        "description": "CPF of the user",
                        "type": "string"
                    },
                    "phone": {
                        "description": "Phone number of the user",
                        "type": "string"
                    },
                    "password": {
                        "description": "Password of the user",
                        "type": "string",
                        "format": "password"
                    },
                    "password_confirmation": {
                        "description": "Password confirmation",
                        "type": "string",
                        "format": "password"
                    }
                },
                "type": "object"
            },
            "UpdateFieldRequest": {
                "title": "Update Field Request",
                "properties": {
                    "name": {
                        "description": "Name of the field",
                        "type": "string"
                    },
                    "location": {
                        "description": "Location of the field",
                        "type": "string"
                    },
                    "type": {
                        "description": "Type of the field",
                        "type": "string"
                    },
                    "hourly_rate": {
                        "description": "Hourly rate for renting the field",
                        "type": "number",
                        "format": "float"
                    }
                },
                "type": "object"
            },
            "UpdateReservationRequest": {
                "title": "Update Reservation Request",
                "properties": {
                    "user_id": {
                        "description": "ID of the user",
                        "type": "integer"
                    },
                    "start_time": {
                        "description": "Start time of the reservation",
                        "type": "string",
                        "format": "date-time"
                    },
                    "end_time": {
                        "description": "End time of the reservation",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "UpdateUserRequest": {
                "title": "Update User Request",
                "properties": {
                    "name": {
                        "description": "Name of the user",
                        "type": "string"
                    },
                    "email": {
                        "description": "Email of the user",
                        "type": "string",
                        "format": "email"
                    },
                    "cpf": {
                        "description": "CPF of the user",
                        "type": "string"
                    },
                    "phone": {
                        "description": "Phone number of the user",
                        "type": "string"
                    },
                    "password": {
                        "description": "Password of the user",
                        "type": "string",
                        "format": "password"
                    },
                    "password_confirmation": {
                        "description": "Password confirmation",
                        "type": "string",
                        "format": "password"
                    }
                },
                "type": "object"
            },
            "Field": {
                "title": "Field",
                "required": [
                    "name",
                    "location",
                    "type",
                    "hourly_rate"
                ],
                "properties": {
                    "id": {
                        "description": "ID of the field",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "description": "Name of the field",
                        "type": "string"
                    },
                    "location": {
                        "description": "Location of the field",
                        "type": "string"
                    },
                    "type": {
                        "description": "Type of the field",
                        "type": "string"
                    },
                    "hourly_rate": {
                        "description": "Hourly rate for renting the field",
                        "type": "number",
                        "format": "float"
                    }
                },
                "type": "object"
            },
            "Reservation": {
                "title": "Reservation",
                "required": [
                    "user_id",
                    "start_time",
                    "end_time"
                ],
                "properties": {
                    "id": {
                        "description": "ID of the reservation",
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_id": {
                        "description": "ID of the user",
                        "type": "integer"
                    },
                    "start_time": {
                        "description": "Start time of the reservation",
                        "type": "string",
                        "format": "date-time"
                    },
                    "end_time": {
                        "description": "End time of the reservation",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "required": [
                    "name",
                    "email",
                    "cpf",
                    "phone"
                ],
                "properties": {
                    "id": {
                        "description": "ID of the user",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "description": "Name of the user",
                        "type": "string"
                    },
                    "email": {
                        "description": "Email of the user",
                        "type": "string",
                        "format": "email"
                    },
                    "cpf": {
                        "description": "CPF of the user",
                        "type": "string"
                    },
                    "phone": {
                        "description": "Phone number of the user",
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "Bearer"
            }
        }
    }
}